# Esconde a versão do Nginx em páginas de erro e cabeçalhos de resposta.
server_tokens off;

# Bloco para compressão Gzip
gzip on;
gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
gzip_min_length 1000;

# Servidor HTTP - O único servidor ativo por enquanto
server {
    listen 80;
    # Usar uma variável para o nome do servidor é uma boa prática, mesmo na rede local.
    # Pode ser o IP do Pi, 'localhost', ou um nome de host local.
    server_name ${SERVER_NAME};

    root /usr/share/nginx/html;
    index index.html;

    # Inclui as configurações comuns que definimos no snippet
    include /etc/nginx/snippets/common.conf;

    # ----- ROTAS PARA SUAS APLICAÇÕES -----

    # Rota raiz (/) para a aplicação principal
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Rota para screensaver_mng (/screensaver_mng/) para a aplicação Flask
    # Use ^~ para dar prioridade a este bloco sobre qualquer regra de regex
#    location ^~ /screensaver_mng {
        # Se alguém acessar sem a barra, redirecione permanentemente
        # para o mesmo local COM a barra.
#        return 301 $scheme://$host$request_uri/;
#    }
#    location ^~ /screensaver_mng/ {
        # 'screensaber_service' é o nome do servico no docker-compose.
        # A porta 5000 é a porta que o Gunicorn está usando DENTRO da rede Docker.
#        proxy_pass http://screensaber_service:5000/;

        # Cabeçalhos importantes para o proxy reverso
#        proxy_set_header Host $host;#
#        proxy_set_header X-Real-IP $r#emote_addr;
#        proxy_set_header X-Forwarded-F#or $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Pr#oto $scheme; # Informa a app que a conexão original foi http
        # Ele informa ao ProxyFix qual é o prefixo do caminho.
#        proxy_set_header X-Forwarded-Pre#fix /screensaver_mng;
#    }   


    # Rota para minecraft_mng (/minecraft_mng/) para a aplicação Flask
    # Use ^~ para dar prioridade a este bloco sobre qualquer regra de regex
    location ^~ /minecraft_mng {
        # Se alguém acessar sem a barra, redirecione permanentemente
        # para o mesmo local COM a barra.
        return 301 $scheme://$host$request_uri/;
    }
    location ^~ /minecraft_mng/ {
        # 'minecraft_service' é o nome do servico no docker-compose.
        # A porta 5001 é a porta que o Gunicorn está usando DENTRO da rede Docker.
        proxy_pass http://minecraft_service:5001/;

        # Cabeçalhos importantes para o proxy reverso
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Informa a app que a conexão original foi http
        # Ele informa ao ProxyFix qual é o prefixo do caminho.
        proxy_set_header X-Forwarded-Prefix /minecraft_mng/;
    }   

    # Rota para um "health check" ou página de status do Gateway
    location /gateway_status {
        return 200 'Gateway rodando!\n';
        add_header Content-Type text/plain;
    }
}

## Servidor principal que lida com o tráfego HTTPS
#server {
#    listen 443 ssl;
#    listen [::]:443 ssl;
#    http2 on; # Habilita HTTP/2 para melhor performance
#    server_name _; # Escuta para qualquer hostname
#
#    # Inclui as configurações comuns que definimos no snippet
#    include /etc/nginx/snippets/common.conf;
#    include /etc/nginx/snippets/ssl.conf;
#
#    # --- ROTEAMENTO DA APLICAÇÃO ---
#    location / {
#        # Repassa a requisição para o container da aplicação Flask
#        proxy_pass http://flask_app:5000;
#
#        # Cabeçalhos importantes para o proxy reverso
#        proxy_set_header Host $host;
#        proxy_set_header X-Real-IP $remote_addr;
#        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#        proxy_set_header X-Forwarded-Proto $scheme;
#    }
#
#    # Opcional: Melhora o tratamento de erros para não expor caminhos do sistema
#    error_page 500 502 503 504 /50x.html;
#    location = /50x.html {
#        root /usr/share/nginx/html;
#    }
#}
